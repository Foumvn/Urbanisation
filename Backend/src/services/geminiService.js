
const { GoogleGenerativeAI } = require('@google/generative-ai');

class GeminiService {
  constructor() {
    if (!process.env.GEMINI_API_KEY) {
      throw new Error('GEMINI_API_KEY manquante dans les variables d\'environnement');
    }
    
    this.genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    this.model = this.genAI.getGenerativeModel({ 
      model: 'gemini-2.0-flash-exp',
      generationConfig: {
        temperature: 0.7,
        topP: 0.8,
        topK: 40,
        maxOutputTokens: 2048,
      }
    });
    
    this.systemInstruction = `Tu es un expert en urbanisme fran√ßais sp√©cialis√© dans les d√©clarations pr√©alables de travaux.

TON R√îLE : Aider les utilisateurs √† pr√©parer leurs dossiers de d√©claration pr√©alable en r√©pondant √† leurs questions et en les guidant dans les d√©marches.

DOMAINES D'EXPERTISE :
- R√®gles d'urbanisme (PLU, POS, RNU)
- Formulaires CERFA (DP, PC, Permis d'am√©nager)
- Plans requis (DP1, DP2, DP3, DP4)
- Calculs de surfaces (SHON, SHAB, emprise au sol)
- R√®gles de recul, hauteur, implantation
- D√©clarations pr√©alables pour extensions, abris, piscines, cl√¥tures, etc.

INSTRUCTIONS :
- Sois pr√©cis et technique mais p√©dagogique
- Cite les articles de loi quand c'est pertinent (Code de l'urbanisme)
- Donne des conseils pratiques pour remplir les formulaires
- Propose toujours l'√©tape suivante
- Si tu manques d'information, pose des questions pr√©cises (surface, localisation, etc.)
- R√©ponds en fran√ßais de mani√®re professionnelle et utile`;
  }

  async generateResponse(prompt, conversationHistory = []) {
    try {
      let history = [];
      
      if (conversationHistory && conversationHistory.length > 0) {
        history = conversationHistory
          .filter(msg => msg.role !== 'assistant' || msg.id !== '1')
          .map(msg => ({
            role: msg.role === 'assistant' ? 'model' : 'user',
            parts: [{ text: msg.content }]
          }));

        if (history.length > 0 && history[0].role !== 'user') {
          history = history.slice(1);
        }
      }

      const fullPrompt = `${this.systemInstruction}\n\nQUESTION DE L'UTILISATEUR : ${prompt}`;

      if (history.length === 0) {
        const result = await this.model.generateContent(fullPrompt);
        const response = result.response;
        const text = response.text();
        console.log('‚úÖ R√©ponse Gemini g√©n√©r√©e avec succ√®s');
        return text;
      }

      const chat = this.model.startChat({
        history: history,
        generationConfig: {
          temperature: 0.7,
          topP: 0.8,
          topK: 40,
          maxOutputTokens: 2048,
        },
      });

      const result = await chat.sendMessage(fullPrompt);
      const response = result.response;
      const text = response.text();

      console.log('‚úÖ R√©ponse Gemini g√©n√©r√©e avec succ√®s');
      return text;
    } catch (error) {
      console.error('‚ùå Erreur Gemini:', error);
      throw new Error('Erreur lors de la g√©n√©ration de la r√©ponse IA');
    }
  }

  async analyzeCerfaForm(formData) {
    try {
      const prompt = `Analyse ce formulaire CERFA pour un projet d'urbanisme :

üìã INFORMATIONS DU PROJET :
- Nature du projet: ${formData.natureProjet}
- Nom: ${formData.nom} ${formData.prenom}
- Adresse des travaux: ${formData.adresseTravaux}
- Surface du projet: ${formData.surface} m¬≤
- Code postal: ${formData.codePostal || 'Non renseign√©'}

üìù ANALYSE DEMAND√âE :
1. Liste des documents obligatoires √† joindre au dossier
2. V√©rifications PLU √† effectuer pour cette commune
3. Calculs de surface √† v√©rifier (emprise au sol, surface de plancher)
4. Recommandations sp√©cifiques pour ce type de projet
5. Points de vigilance et erreurs fr√©quentes √† √©viter

Fournis une analyse d√©taill√©e et des conseils pratiques.`;

      const response = await this.generateResponse(prompt);
      console.log('‚úÖ Analyse CERFA g√©n√©r√©e avec succ√®s');
      return response;
    } catch (error) {
      console.error('‚ùå Erreur analyse CERFA:', error);
      throw new Error('Erreur lors de l\'analyse du formulaire CERFA');
    }
  }
}

module.exports = new GeminiService();