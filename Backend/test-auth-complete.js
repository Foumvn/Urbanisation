
require('dotenv').config();
const AuthService = require('./src/services/authService');

async function testAuthComplete() {
  console.log('üöÄ TEST COMPLET DU SYST√àME AUTHENTIFICATION\n');
  
  const testEmail = `fredyfoumvn237${Date.now()}@gmail.com`;
  const testPassword = '123456';
  const testName = 'Utilisateur Test';

  try {
    // === TEST 1: INSCRIPTION ===
    console.log('1. üìù TEST INSCRIPTION');
    const signupResult = await AuthService.signup(testEmail, testPassword, testName);
    
    console.log('‚úÖ Inscription r√©ussie!');
    console.log('üë§ Utilisateur cr√©√©:', signupResult.user.uid);
    console.log('üî¢ Code de v√©rification:', signupResult.verificationCode);
    console.log('üìß Email v√©rifi√©?:', signupResult.user.emailVerified);
    console.log('---');

    // === TEST 2: TENTATIVE DE CONNEXION SANS V√âRIFICATION ===
    console.log('2. üîê TEST CONNEXION SANS V√âRIFICATION');
    try {
      const loginResult = await AuthService.login(testEmail, testPassword);
      console.log('‚ùå ERREUR: La connexion aurait d√ª √©chouer sans v√©rification');
    } catch (error) {
      console.log('‚úÖ Connexion bloqu√©e (email non v√©rifi√©):', error.message);
    }
    console.log('---');

    // === TEST 3: V√âRIFICATION AVEC MAUVAIS CODE ===
    console.log('3. ‚ùå TEST V√âRIFICATION MAUVAIS CODE');
    try {
      await AuthService.verifyCode(testEmail, '000000');
      console.log('‚ùå ERREUR: La v√©rification aurait d√ª √©chouer');
    } catch (error) {
      console.log('‚úÖ V√©rification √©chou√©e (mauvais code):', error.message);
    }
    console.log('---');

    // === TEST 4: V√âRIFICATION AVEC BON CODE ===
    console.log('4. ‚úÖ TEST V√âRIFICATION BON CODE');
    const verifyResult = await AuthService.verifyCode(testEmail, signupResult.verificationCode);
    console.log('‚úÖ V√©rification r√©ussie:', verifyResult.message);
    console.log('---');

    // === TEST 5: CONNEXION APR√àS V√âRIFICATION ===
    console.log('5. üîì TEST CONNEXION APR√àS V√âRIFICATION');
    const finalLogin = await AuthService.login(testEmail, testPassword);
    console.log('‚úÖ Connexion r√©ussie apr√®s v√©rification');
    console.log('üìß Email v√©rifi√©?:', finalLogin.user.emailVerified);
    console.log('---');

    // === TEST 6: RENVOI DE CODE (devrait √©chouer car d√©j√† v√©rifi√©) ===
    console.log('6. üîÑ TEST RENVOI CODE (apr√®s v√©rification)');
    try {
      await AuthService.resendVerificationCode(testEmail);
      console.log('‚ùå ERREUR: Le renvoi aurait d√ª √©chouer');
    } catch (error) {
      console.log('‚úÖ Renvoi bloqu√© (d√©j√† v√©rifi√©):', error.message);
    }

    console.log('\nüéâ TOUS LES TESTS SONT R√âUSSIS!');
    console.log('\nüìã R√âCAPITULATIF:');
    console.log('‚Ä¢ Inscription ‚úì');
    console.log('‚Ä¢ Blocage sans v√©rification ‚úì');
    console.log('‚Ä¢ V√©rification √©chou√©e (mauvais code) ‚úì');
    console.log('‚Ä¢ V√©rification r√©ussie ‚úì');
    console.log('‚Ä¢ Connexion apr√®s v√©rification ‚úì');
    console.log('‚Ä¢ Protection renvoi inutile ‚úì');

  } catch (error) {
    console.error('‚ùå TEST √âCHOU√â:', error.message);
    console.error('D√©tails:', error);
  }
}

testAuthComplete();